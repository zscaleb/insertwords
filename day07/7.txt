前情回顾

1. udp通信

   服务端： socket -> bind -> recvfrom/sendto -> close

   客户端： socket -> sendto/recvfrom -> close

2. 套接字属性

    fileno()
    getpeername()
    setsockopt()

3. struct

   功能: 将一组数据打包位bytes，将bytes数据解析为元组

   Struct(fmt)  i -> int  f-> float  s -> bytes
   pack() 打包
   unpack() 解包

4. http 协议

   请求格式：  请求行  GET  /   HTTP/1.1
             请求头
             空行
             请求体

   响应格式：  响应行  HTTP/1.1  200  OK
             响应头
             空行
             响应体  具体内容

聊天室程序思路：

1. 需求分析 ：  达到什么样的目的，形成什么样的运行流程

    * 启动软件--> 输入姓名-->进入-->聊天（收发随意）-> 退出
             |    |
             ---不允许进入

2. 技术点的确定

   * 消息发送流程： client-->server->client

   * 网络选择 ： udp 进行数据传输

   * 存储内容： name  address
     {name:address,}
     [(name,address),]

   * 消息收发互不影响

     使用多进程，让消息发送接收各占一个进程

3. 结构和注意事项

   * 采用什么结构封装 ： 函数
   * 编写一个功能，测试一个功能
   * 注释

4. 功能模块分析

   * 网络搭建
        客户端

        服务端

   * 进入聊天室
   * 聊天
   * 退出聊天室
   * 管理员消息

5. 协议设定

   请求格式： L  name

   响应格式：


作业 ： 1. fork 使用 理解
       2. IO代码整理
       3. 聊天室 思路和代码







